import{d as a}from"./chunks/pinyin.data.20c83987.js";import{o as r,c as D,k as s,a as n,l as p,V as e}from"./chunks/framework.c5c8a48b.js";const y=e(`<h1 id="npm-run-dev后发生了什么" tabindex="-1">npm run dev后发生了什么 <a class="header-anchor" href="#npm-run-dev后发生了什么" aria-label="Permalink to &quot;npm run dev后发生了什么&quot;">​</a></h1><h2 id="npm-run-dev后发生了什么-1" tabindex="-1">npm run dev后发生了什么 <a class="header-anchor" href="#npm-run-dev后发生了什么-1" aria-label="Permalink to &quot;npm run dev后发生了什么&quot;">​</a></h2><p>这里以<code>acorn</code>为例：</p><ul><li><code>npm install</code>的时候会根据库源代码的<code>package.json</code>中的<code>bin</code>配置来生成<code>node_modules/.bin</code>下的软链接</li></ul><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">acorn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./bin/acorn</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>软链接是一个脚本，它会用<code>node</code>去执行<code>node_modules</code>下<code>acorn/bin/acorn.js</code>文件<br> 软链接有三个文件，<code>windows</code>执行的是<code>cmd</code>文件：<br><code>acorn</code>：<code>unix</code>默认的可执行文件<br><code>acorn.cmd</code>：<code>windows cmd</code>中默认的可执行文件<br><code>acorn.ps1</code>：<code>windows</code> <code>powershell</code>中可执行文件，可以跨平台</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/sh</span></span>
<span class="line"><span style="color:#A6ACCD;">basedir</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">dirname</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&quot;$(</span><span style="color:#82AAFF;">echo</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;font-style:italic;">$0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">sed</span><span style="color:#C3E88D;"> -e </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s,\\\\,/,g</span><span style="color:#89DDFF;">&#39;)&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">uname</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">in</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">CYGWIN</span><span style="color:#89DDFF;">*|*</span><span style="color:#A6ACCD;">MINGW</span><span style="color:#89DDFF;">*|*</span><span style="color:#A6ACCD;">MSYS</span><span style="color:#89DDFF;">*)</span><span style="color:#A6ACCD;"> basedir=</span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">cygpath</span><span style="color:#C3E88D;"> -w </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$basedir</span><span style="color:#89DDFF;">&quot;\`</span><span style="color:#89DDFF;">;;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">esac</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-x</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$basedir</span><span style="color:#C3E88D;">/node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">];</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$basedir</span><span style="color:#C3E88D;">/node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$basedir</span><span style="color:#C3E88D;">/../acorn/bin/acorn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;font-style:italic;">$@</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span></span>
<span class="line highlighted"><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$basedir</span><span style="color:#C3E88D;">/../acorn/bin/acorn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;font-style:italic;">$@</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span></code></pre></div><h2 id="配置了bin就一定会生成软链接吗" tabindex="-1">配置了bin就一定会生成软链接吗 <a class="header-anchor" href="#配置了bin就一定会生成软链接吗" aria-label="Permalink to &quot;配置了bin就一定会生成软链接吗&quot;">​</a></h2>`,8),F=s("code",null,"ourcad",-1),i=s("code",null,"package.json",-1),d=s("code",null,"bin",-1),C=s("code",null,"node_modules/.bin",-1),A=s("br",null,null,-1),u=s("code",null,"bin",-1),h=s("code",null,"node_modules",-1),_=s("br",null,null,-1),m=["href"],b=s("br",null,null,-1),q=s("code",null,"demo3",-1),g=s("code",null,"index.ts",-1),f=e(`<div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Demo3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">       </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">name</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">wakk</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">       </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">wakk ! Demo3:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 新增下面一行</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">脚手架搭建测试</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>2 用tsc编译index.ts生成index.js 3 在demo3项目的package.json中配置了bin字段，配置如下：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">chaochao</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./index.js</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>4 删除所有项目的依赖(因为软链接的生成是在<code>npm install</code>执行的时候)，回到根目录下执行<code>pnpm install</code>，然后查看<code>demo1</code>中<code>node_modules/.bin</code>下，生成了名为<code>chaochao</code>的软链接 5 修改demo1的命令如下：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">chaochao</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>6 执行<code>npm run dev</code>，控制台输出了：脚手架搭建测试。成功!</p><p>思考：<br> 问：那么全局指令，比如<code>pnpm</code>、<code>yarn</code>这些，如果不使用<code>-g</code>来安装，是否还可以使用这些指令？<br> 答：如果不全局安装，需要使用<code>npx pnpm</code>来执行对应的命令，不能直接执行</p>`,7),E=s("code",null,"vue-cli install",-1),v=s("code",null,"npm run vue-cli",-1),k=s("br",null,null,-1),B=["href"],$=JSON.parse('{"title":"npm run dev后发生了什么","description":"","frontmatter":{},"headers":[],"relativePath":"2023/n0pmru0n0de0vhou4fa1sheng1le0shen2me0.md","filePath":"2023/n0pmru0n0de0vhou4fa1sheng1le0shen2me0.md","lastUpdated":null}'),x={name:"2023/n0pmru0n0de0vhou4fa1sheng1le0shen2me0.md"},P=Object.assign(x,{setup(j){const o="Monorepo学习",l="脚手架开发",t=a.data[o]?a.data[o]:o,c=a.data[l]?a.data[l]:l;return(T,w)=>(r(),D("div",null,[y,s("p",null,[F,n("由于没有在"),i,n("中配置"),d,n("字段数据，所以不会在"),C,n("下生成软链接"),A,n(" 配置了"),u,n("字段的所有包都会在"),h,n("下生成软链接吗？"),_,n(" 是的！我在上午刚用 "),s("a",{href:"./"+p(t)},"Monorepo+pnpm",8,m),n(" 搭建的项目里做了如下测试："),b,n(" 1 修改"),q,n("中的"),g,n("代码，修改如下：")]),f,s("p",null,[n("问：如何做一个脚手架，让安装的人直接执行你的命令，就像："),E,n("一样，而不是"),v,k,n(" 答：后续补充了脚手架相关内容的学习，具体内容可以查看"),s("a",{href:"./"+p(c)},"脚手架开发",8,B)])]))}});export{$ as __pageData,P as default};
