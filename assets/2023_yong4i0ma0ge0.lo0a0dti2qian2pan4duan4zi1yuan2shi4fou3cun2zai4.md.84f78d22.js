import{_ as s,o as a,c as n,V as o}from"./chunks/framework.c5c8a48b.js";const C=JSON.parse('{"title":"用image.load提前判断资源是否存在","description":"","frontmatter":{},"headers":[],"relativePath":"2023/yong4i0ma0ge0.lo0a0dti2qian2pan4duan4zi1yuan2shi4fou3cun2zai4.md","filePath":"2023/yong4i0ma0ge0.lo0a0dti2qian2pan4duan4zi1yuan2shi4fou3cun2zai4.md","lastUpdated":null}'),l={name:"2023/yong4i0ma0ge0.lo0a0dti2qian2pan4duan4zi1yuan2shi4fou3cun2zai4.md"},p=o(`<h1 id="用image-load提前判断资源是否存在" tabindex="-1">用image.load提前判断资源是否存在 <a class="header-anchor" href="#用image-load提前判断资源是否存在" aria-label="Permalink to &quot;用image.load提前判断资源是否存在&quot;">​</a></h1><p>cad的批注数据不一定所有图纸都有，只有批注数据存在时才能请求回来comment.json数据。而如果没有批注数据，控制台就会报一大片请求失败的错误。 问题：如何提前判断资源文件是否存在？如果确定存在才发起资源请求，不存在就不去请求，避免控制台报错</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> img </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Image</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">src </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> url</span></span>
<span class="line"><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onload</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">资源存在</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onerror</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">资源不存在</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>使用img.onload方法确实让报错提示温和了很多，但是还是会在控制台报错：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">comment.json:1     GET https://api.ourbim.com:8181/CADFile/20230818102838961/comment.json 404 (Not Found)</span></span></code></pre></div><p>在不想新增接口来判断图纸是否有批注的情况下，只能先采用这种方法让报错提示尽可能温和一点了。 不行！使用img.onload方法去测试json数据，即使json数据存在，也会走img.onerror方法提示资源不存在，只能去新增批注是否存在的判断接口了。</p><p>因为ourbim官网部署了https，而https发不出http请求，只能通过nginx代理去请求过去，但sdk的封装请求不可能使用代理的字段去封装。如果对应的请求地址调整为https，那后面的每次修改都要进行修改</p>`,7),e=[p];function t(c,r,i,y,D,F){return a(),n("div",null,e)}const d=s(l,[["render",t]]);export{C as __pageData,d as default};
