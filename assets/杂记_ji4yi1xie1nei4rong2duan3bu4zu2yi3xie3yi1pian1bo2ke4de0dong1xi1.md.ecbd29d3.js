import{_ as s,o as a,c as n,V as e}from"./chunks/framework.c5c8a48b.js";const h=JSON.parse('{"title":"杂记","description":"","frontmatter":{},"headers":[],"relativePath":"杂记/ji4yi1xie1nei4rong2duan3bu4zu2yi3xie3yi1pian1bo2ke4de0dong1xi1.md","filePath":"杂记/ji4yi1xie1nei4rong2duan3bu4zu2yi3xie3yi1pian1bo2ke4de0dong1xi1.md","lastUpdated":null}'),o={name:"杂记/ji4yi1xie1nei4rong2duan3bu4zu2yi3xie3yi1pian1bo2ke4de0dong1xi1.md"},l=e(`<h1 id="杂记" tabindex="-1">杂记 <a class="header-anchor" href="#杂记" aria-label="Permalink to &quot;杂记&quot;">​</a></h1><h3 id="后端支付直接返回png处理" tabindex="-1">后端支付直接返回png处理 <a class="header-anchor" href="#后端支付直接返回png处理" aria-label="Permalink to &quot;后端支付直接返回png处理&quot;">​</a></h3><p>之前处理的支付都是后端生成支付链接，前端根据链接用qrcode去生成二维码展示</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createTopUpOrder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">request</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">/......./</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        method</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        responseType</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">blob</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 接收以后处理成url，直接扔进img中</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> blob </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Blob</span><span style="color:#A6ACCD;">([res])</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> codeImage </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">URL</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createObjectURL</span><span style="color:#A6ACCD;">(blob)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> :src=&quot;codeImage&quot; </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">buyCode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">alt</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="npm发布的sdk通过链接形式访问" tabindex="-1">npm发布的sdk通过链接形式访问 <a class="header-anchor" href="#npm发布的sdk通过链接形式访问" aria-label="Permalink to &quot;npm发布的sdk通过链接形式访问&quot;">​</a></h3><p>在npm上发布的js代码，可以通过<code>https://unpkg.com</code>访问到资源，例如<code>ourcad</code>，可以通过如下链接访问到资源： <a href="https://unpkg.com/ourcad@1.0.5/esm/index.js" target="_blank" rel="noreferrer">https://unpkg.com/ourcad@1.0.5/esm/index.js</a></p><p><code>https://cdn.jsdelivr.net</code>也可以这样访问github上面的资源 <a href="https://cdn.jsdelivr.net/gh/%E4%BD%A0%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D/%E4%BD%A0%E7%9A%84%E4%BB%93%E5%BA%93%E5%90%8D@%E5%8F%91%E5%B8%83%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7/%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84" target="_blank" rel="noreferrer">https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</a><a href="https://cdn.jsdelivr.net/gh/chaochao2-0/chaochao-cli/readme.md" target="_blank" rel="noreferrer">https://cdn.jsdelivr.net/gh/chaochao2-0/chaochao-cli/readme.md</a></p><h3 id="使用scss打包成css的纯css项目" tabindex="-1">使用scss打包成css的纯css项目 <a class="header-anchor" href="#使用scss打包成css的纯css项目" aria-label="Permalink to &quot;使用scss打包成css的纯css项目&quot;">​</a></h3><p>alphardex/aqua.css</p><h3 id="原子化css框架tailwind" tabindex="-1">原子化css框架tailwind <a class="header-anchor" href="#原子化css框架tailwind" aria-label="Permalink to &quot;原子化css框架tailwind&quot;">​</a></h3><p>2023/9/20 今天打开github一看，好家伙，tailwindcss已经有72.1k的star数了。而且还提供了vscode插件的支持，看来下一个项目又要开始用新东西了。 确实，按照tailwindcss官网所说的，我没有拒绝的理由，与其每个项目都维护一个自己习惯的commom.less，还不如自己主动去适应更强大的tailwindcss。在有了vscode插件的加持下，这才是真正能提高我开发效率的工具！</p><h3 id="查看github热门趋势和star排行榜" tabindex="-1">查看github热门趋势和star排行榜 <a class="header-anchor" href="#查看github热门趋势和star排行榜" aria-label="Permalink to &quot;查看github热门趋势和star排行榜&quot;">​</a></h3><p><a href="https://github.com/trending" target="_blank" rel="noreferrer">https://github.com/trending</a></p><p>Stack Overflow的语言趋势： <a href="https://survey.stackoverflow.co/2022/#section-most-popular-technologies-programming-scripting-and-markup-languages" target="_blank" rel="noreferrer">https://survey.stackoverflow.co/2022/#section-most-popular-technologies-programming-scripting-and-markup-languages</a></p><h3 id="服务的部署和资源访问这些链接" tabindex="-1">服务的部署和资源访问这些链接 <a class="header-anchor" href="#服务的部署和资源访问这些链接" aria-label="Permalink to &quot;服务的部署和资源访问这些链接&quot;">​</a></h3><p>服务的访问链接和一些静态资源的访问最好都新建一个统一配置的文件来管理，以防止后续有私有化的情况需要重新部署。</p><h3 id="图形学相关地书" tabindex="-1">图形学相关地书 <a class="header-anchor" href="#图形学相关地书" aria-label="Permalink to &quot;图形学相关地书&quot;">​</a></h3><p>《数据可视化创意手记》 原研哉相关的书 有时间都可以读一读，扩展自己的想象力</p>`,18),p=[l];function t(r,c,i,d,y,F){return a(),n("div",null,p)}const u=s(o,[["render",t]]);export{h as __pageData,u as default};
