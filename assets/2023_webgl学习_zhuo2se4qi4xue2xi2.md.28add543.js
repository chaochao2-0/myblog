import{_ as s,o as a,c as e,V as n}from"./chunks/framework.c5c8a48b.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"2023/webgl学习/zhuo2se4qi4xue2xi2.md","filePath":"2023/webgl学习/zhuo2se4qi4xue2xi2.md","lastUpdated":null}'),o={name:"2023/webgl学习/zhuo2se4qi4xue2xi2.md"},t=n(`<h3 id="着色器学习" tabindex="-1">着色器学习 <a class="header-anchor" href="#着色器学习" aria-label="Permalink to &quot;着色器学习&quot;">​</a></h3><p>作为一个图形学的开发工程师，如果做不出来一些能够帅到自己的酷炫效果，那还做什么图形学开发工程师啊！</p><p>好，今天，我们来看一下three中这个令人惊叹的案例：<code>webgl_gpgpu_birds</code>顺便来学一学在three中如何使用着色器并且如何实现一些优雅的效果：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// modelMatrix（模型矩阵）、viewMatrix（相机矩阵）、projectionMatrix（投影矩阵）</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 使用three中的ShaderMaterial材质来使用着色器时，上面的矩阵是three中内置好的矩阵变量</span></span>
<span class="line"><span style="color:#A6ACCD;">vec4 modelPosition </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> modelMatrix </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">vec4</span><span style="color:#A6ACCD;">(newPos</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">vec4 viewPosition </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> viewMatrix </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> modelPosition</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">vec4 projectedPosition </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> projectionMatrix </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> viewPosition</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 包括顶点着色器中的uv，也是three内置好的变量</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 粒子效果的实现使用的是three中的Point</span></span></code></pre></div><p><a href="https://github.com/alphardex/webgl-shader-book-code.git" target="_blank" rel="noreferrer">https://github.com/alphardex/webgl-shader-book-code.git</a></p>`,5),l=[t];function p(r,c,i,d,h,y){return a(),e("div",null,l)}const _=s(o,[["render",p]]);export{C as __pageData,_ as default};
